#
# Azure DevOps pipeline
#
# Description     : DevInfra Auto remove Test
# Created by      : Muhammed Iqbal
#
#

trigger: none

#trigger:
#  batch: true
#  branches:
#    include:
#      - master
#      - development
#  paths:
#    exclude:
#      - README.md
#      - LICENSE
#      - .gitignore

# Don't run against PRs
pr: none

variables:
- group: terraform-vars


stages:
- stage: Validation
  displayName: Terraform config validation

  jobs:  
  - job: Validation
    displayName: Terraform config validate
    pool:
      vmImage: 'ubuntu-latest' 
    
    steps:
      - task: TerraformInstaller@0
        displayName: Install Terraform
        inputs:
          terraformVersion: 'latest'
      
      - task: TerraformCLI@0
        displayName: Terraform Init Job
        inputs:
          command: 'init'
          workingDirectory: '$(System.DefaultWorkingDirectory)/go-app/terraform'
          commandOptions: '-backend=false'
          allowTelemetryCollection: false    
      
      - task: TerraformCLI@0
        displayName: Validate
        inputs:
          command: 'validate'
          workingDirectory: '$(System.DefaultWorkingDirectory)/go-app/terraform'
          allowTelemetryCollection: true

      
- stage: Provision
  displayName: Provistion Infrastructure
  dependsOn: Validation
  condition: and(succeeded(), ne(variables['test'], 'destroy'))

  jobs:  
  - job: Provision
    displayName: Provistion Infrastructure
    pool:
      vmImage: 'ubuntu-latest'

    steps:
      - script: |
          echo "Checking the parameter variable"
          echo The variable Value: $(test)

      #- task: TerraformInstaller@0
      #  displayName: Install Terraform
      #  inputs:
      #    terraformVersion: 'latest'
      
      - task: TerraformCLI@0
        displayName: Terraform init with backend
        inputs:
          command: 'init'
          workingDirectory: '$(System.DefaultWorkingDirectory)/go-app/terraform'
          backendType: 'azurerm'
          backendServiceArm: 'mysubscription'
          backendAzureRmResourceGroupName: 'RG_iqbal_tests'
          backendAzureRmStorageAccountName: 'iquzartinfra'
          backendAzureRmContainerName: 'terraform-state'
          backendAzureRmKey: 'tstate-az-devops.state'
          allowTelemetryCollection: false
      
     
      - task: TerraformCLI@0
        displayName: Terraform Plan
        inputs:
          command: 'plan'
          workingDirectory: '$(System.DefaultWorkingDirectory)/go-app/terraform'
          environmentServiceName: 'mysubscription'
          secureVarsFile: 'terraform.tfvars'
          allowTelemetryCollection: false

      - task: TerraformCLI@0
        displayName: Terraform Apply
        inputs:
          command: 'apply'
          workingDirectory: '$(System.DefaultWorkingDirectory)/go-app/terraform'
          environmentServiceName: 'mysubscription'
          secureVarsFile: 'terraform.tfvars'
          allowTelemetryCollection: false

- stage: Destroy
  displayName: Destroy Infrastructure
  dependsOn: Validation
  condition: and(succeeded(), eq(variables['test'], 'destroy'))

  jobs:  
  - job: Destroy
    displayName: Destroy Infrastructure
    pool:
      vmImage: 'ubuntu-latest'

    steps:
      - script: |
          echo "Checking the parameter variable"
          echo The variable Value: $(test)

      - task: TerraformCLI@0
        displayName: Terraform Init
        inputs:
          command: 'init'
          workingDirectory: '$(System.DefaultWorkingDirectory)/go-app/terraform'
          backendType: 'azurerm'
          backendServiceArm: 'mysubscription'
          backendAzureRmResourceGroupName: 'RG_iqbal_tests'
          backendAzureRmStorageAccountName: 'iquzartinfra'
          backendAzureRmContainerName: 'terraform-state'
          backendAzureRmKey: 'tstate-az-devops.state'
          allowTelemetryCollection: false

      - task: TerraformCLI@0
        displayName: Terraform Destroy
        inputs:
          command: 'destroy'
          workingDirectory: '$(System.DefaultWorkingDirectory)/go-app/terraform'
          environmentServiceName: 'mysubscription'
          secureVarsFile: 'terraform.tfvars'
          allowTelemetryCollection: false